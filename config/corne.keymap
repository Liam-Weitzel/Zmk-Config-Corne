/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hold_tap_mo_kp: hold_tap_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };

        hold_tap_kp_kp: hold_tap_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };

        hold_tap_tog_kr: hold_tap_tog_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KR";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            bindings = <&tog>, <&key_repeat>;

            quick-tap-ms = <220>;
        };

        hold_tap_kp_kr: hold_tap_kp_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KR";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&key_repeat>;

            quick-tap-ms = <220>;
        };

        sticky_key: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <500>;
        };

        hold_tap_sk_kp: hold_tap_sk_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SK_KP";
            bindings = <&sticky_key>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <220>;
            flavor = "tap-preferred";
        };

        hold_tap_kp_sk: hold_tap_kp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_SK";
            bindings = <&kp>, <&sticky_key>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };

        hold_tap_tog_kp: hold_tap_tog_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KP";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };

        backspace_del_mod_layer_1: backspace_del_mod_layer_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_1";
            bindings = <&kp BACKSPACE>, <&hold_tap_mo_kp 15 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_3: backspace_del_mod_layer_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_3";
            bindings =
                <&hold_tap_tog_kp 5 BACKSPACE>,
                <&hold_tap_tog_kp 5 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_5: backspace_del_mod_layer_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_5";
            bindings =
                <&hold_tap_tog_kp 11 BACKSPACE>,
                <&hold_tap_tog_kp 11 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_2: backspace_del_mod_layer_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_2";
            bindings =
                <&hold_tap_tog_kp 2 BACKSPACE>,
                <&hold_tap_tog_kp 2 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_4: backspace_del_mod_layer_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_4";
            bindings =
                <&hold_tap_tog_kp 8 BACKSPACE>,
                <&hold_tap_tog_kp 8 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        backspace_del_mod_layer_6: backspace_del_mod_layer_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_6";
            bindings =
                <&hold_tap_tog_kp 14 BACKSPACE>,
                <&hold_tap_tog_kp 14 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        hold_tap_no_kp: hold_tap_no_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_NO_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };

        left_prev: left_prev {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_PREV";
            bindings = <&kp LEFT_ARROW>, <&kp F17>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        right_next: right_next {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_NEXT";
            bindings = <&kp RIGHT_ARROW>, <&kp F18>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        capsword: capsword {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORD";
            #binding-cells = <0>;
            continue-list = <A B D C E F G H I J K L M N O P Q R S T U V W X Y Z>;
        };

        caps_capsword_mod_morph: caps_capsword_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "CAPS_CAPSWORD_MOD_MORPH";
            bindings = <&kp CAPSLOCK>, <&capsword>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        hold_tap_kp_caps_word: hold_tap_kp_caps_word {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_CAPS_WORD";
            bindings = <&kp>, <&caps_capsword_mod_morph>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <220>;
        };
    };

    combos {
        compatible = "zmk,combos";

        end {
            bindings = <&kp END>;
            key-positions = <27 28 38>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <27 28 37>;
        };

        esc-left {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15 37>;
        };

        esc-right {
            bindings = <&kp ESCAPE>;
            key-positions = <20 19 40>;
        };

        home-arrow {
            bindings = <&kp HOME>;
            key-positions = <27 37>;
            layers = <1 2 3>;
        };

        end-arrow {
            bindings = <&kp END>;
            key-positions = <27 38>;
            layers = <1 2 3>;
        };

        end-right {
            bindings = <&kp END>;
            key-positions = <31 32 40>;
        };

        home-right {
            bindings = <&kp HOME>;
            key-positions = <39 31 32>;
        };
    };

    macros {
        alt_ctrl: alt_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "ALT_CTRL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                        &kp W                   &kp F                         &kp P                        &kp B                                    &kp J                       &kp L                       &kp U                           &kp Y                   &hold_tap_kp_kp F19 SEMI  &none
&none  &hold_tap_kp_kp RIGHT_ALT A  &hold_tap_kp_kp RGUI R  &hold_tap_kp_kp RCTRL S       &hold_tap_mo_kp 9 T          &kp G                                    &kp M                       &hold_tap_mo_kp 12 N        &hold_tap_kp_kp RCTRL E         &hold_tap_kp_kp RGUI I  &hold_tap_kp_kp RALT O    &none
&none  &kp Z                        &kp X                   &kp C                         &hold_tap_mo_kp 3 D          &kp V                                    &kp K                       &hold_tap_mo_kp 6 H         &kp COMMA                       &kp DOT                 &kp APOS                  &none
                                                            &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_1  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_2 {
            bindings = <
&none  &kp C_BRIGHTNESS_INC   &kp C_VOLUME_UP    &kp C_NEXT                              &none                        &none                            &kp PAGE_UP             &kp HOME                    &kp UP_ARROW                    &kp END         &hold_tap_kp_caps_word F20 0  &none
&none  &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN  &kp C_PREV                              &none                        &none                            &kp PAGE_DOWN           &left_prev                  &kp DOWN_ARROW                  &right_next     &alt_ctrl                     &none
&none  &kp C_BRIGHTNESS_AUTO  &kp K_MUTE         &hold_tap_kp_kp RIGHT_ALT C_PLAY_PAUSE  &none                        &none                            &kp INS                 &kp ESC                     &kp PRINTSCREEN                 &kp SCROLLLOCK  &kp PAUSE_BREAK               &none
                                                 &hold_tap_kp_kp LEFT_ALT TAB            &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LSHIFT LSHIFT    &hold_tap_kp_kr LGUI 0  &backspace_del_mod_layer_2  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_2_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_2_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&none  &none      &kp F7  &kp F8                        &kp F9                       &none                                    &kp F20                     &kp F21                     &kp F22                         &kp F23  &hold_tap_kp_kp F21 F24  &none
&none  &none      &kp F4  &kp F5                        &kp F6                       &none                                    &kp F15                     &kp F16                     &kp F17                         &kp F18  &kp F19                  &none
&none  &kp GLOBE  &kp F1  &kp F2                        &kp F3                       &none                                    &kp F10                     &kp F11                     &kp F12                         &kp F13  &kp F14                  &none
                          &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_3  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_3_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&none  &kp QUESTION     &kp GRAVE    &kp AMPERSAND                 &none                        &none                                    &kp RIGHT_BRACKET           &kp LEFT_BRACKET            &kp ASTERISK                    &kp SLASH  &hold_tap_kp_kp F22 BACKSLASH  &none
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp PIPE                      &none                        &none                                    &kp RIGHT_PARENTHESIS       &kp LEFT_PARENTHESIS        &kp PLUS                        &kp MINUS  &kp EQUAL                      &none
&none  &kp PERIOD       &kp HASH     &kp DOLLAR                    &none                        &none                                    &kp GREATER_THAN            &kp LESS_THAN               &kp PERCENT                     &kp CARET  &kp COMMA                      &none
                                     &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_4  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_4_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&none  &kp QUESTION     &kp N7  &kp N8                        &kp N9                       &kp AMPERSAND                            &kp RIGHT_BRACKET           &kp LEFT_BRACKET            &kp ASTERISK                    &kp SLASH  &hold_tap_kp_kp F23 BACKSLASH  &none
&none  &kp EXCLAMATION  &kp N4  &kp N5                        &kp N6                       &kp PIPE                                 &kp RIGHT_PARENTHESIS       &kp LEFT_PARENTHESIS        &kp PLUS                        &kp MINUS  &kp EQUAL                      &none
&none  &kp PERIOD       &kp N1  &kp N2                        &kp N3                       &kp N0                                   &kp GREATER_THAN            &kp LESS_THAN               &kp PERCENT                     &kp CARET  &kp COMMA                      &none
                                &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_5  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_5_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&none  &ext_power EP_OFF  &ext_power EP_ON  &out OUT_USB                  &out OUT_BLE                 &bt BT_CLR                               &kp K_POWER                 &none                       &none                           &none       &hold_tap_no_kp F24 K_CANCEL  &none
&none  &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2                  &bt BT_SEL 3                 &bt BT_SEL 4                             &kp K_LOCK                  &tog 14                     &none                           &none       &none                         &none
&none  &bootloader        &sys_reset        &none                         &bt BT_PRV                   &bt BT_NXT                               &none                       &none                       &none                           &sys_reset  &bootloader                   &none
                                            &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_6  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_6_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_2_lock {
            if-layers = <2>;
            then-layer = <1>;
        };

        layer_2_temp {
            if-layers = <3>;
            then-layer = <1>;
        };

        layer_3_lock {
            if-layers = <5>;
            then-layer = <4>;
        };

        layer_3_temp {
            if-layers = <6>;
            then-layer = <4>;
        };

        layer_4_lock {
            if-layers = <8>;
            then-layer = <7>;
        };

        layer_4_temp {
            if-layers = <9>;
            then-layer = <7>;
        };

        layer_5_lock {
            if-layers = <11>;
            then-layer = <10>;
        };

        layer_5_temp {
            if-layers = <12>;
            then-layer = <10>;
        };

        layer_6_lock {
            if-layers = <14>;
            then-layer = <13>;
        };

        layer_6_temp {
            if-layers = <15>;
            then-layer = <13>;
        };
    };
};
