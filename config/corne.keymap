/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hold_tap_mo_kp: hold_tap_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
        };

        hold_tap_kp_kp: hold_tap_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
        };

        hold_tap_tog_kr: hold_tap_tog_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KR";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&tog>, <&key_repeat>;
        };

        hold_tap_kp_kr: hold_tap_kp_kr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KR";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&key_repeat>;
        };

        sticky_key: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <3000>;
        };

        hold_tap_sk_kp: hold_tap_sk_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SK_KP";
            bindings = <&sticky_key>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };

        hold_tap_kp_sk: hold_tap_kp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_SK";
            bindings = <&kp>, <&sticky_key>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_tap_tog_kp: hold_tap_tog_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOG_KP";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
        };

        backspace_del_mod_layer_1: backspace_del_mod_layer_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_1";
            bindings = <&kp BACKSPACE>, <&hold_tap_mo_kp 15 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        backspace_del_mod_layer_3: backspace_del_mod_layer_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_3";
            bindings =
                <&hold_tap_tog_kp 5 BACKSPACE>,
                <&hold_tap_tog_kp 5 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        backspace_del_mod_layer_5: backspace_del_mod_layer_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_5";
            bindings =
                <&hold_tap_tog_kp 11 BACKSPACE>,
                <&hold_tap_tog_kp 11 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        backspace_del_mod_layer_2: backspace_del_mod_layer_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_2";
            bindings =
                <&hold_tap_tog_kp 2 BACKSPACE>,
                <&hold_tap_tog_kp 2 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        backspace_del_mod_layer_4: backspace_del_mod_layer_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_4";
            bindings =
                <&hold_tap_tog_kp 8 BACKSPACE>,
                <&hold_tap_tog_kp 8 DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        backspace_del_mod_layer_6: backspace_del_mod_layer_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL_MOD_LAYER_6";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        copy_yank_mod: copy_yank_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "COPY_YANK_MOD";
            bindings = <&kp LC(C)>, <&kp Y>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        paste_put_mod: paste_put_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "PASTE_PUT_MOD";
            bindings = <&kp LC(V)>, <&kp P>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        cut_delete_mod: cut_delete_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "CUT_DELETE_MOD";
            bindings = <&kp LC(X)>, <&kp D>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        undo_undo_mod: undo_undo_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDO_UNDO_MOD";
            bindings = <&kp LC(Z)>, <&kp U>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        redo_redo_mod: redo_redo_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "REDO_REDO_MOD";
            bindings = <&kp LC(Y)>, <&kp LC(R)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        end {
            bindings = <&kp END>;
            key-positions = <27 28 38>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <27 28 37>;
        };

        esc-left {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15 37>;
        };

        esc-right {
            bindings = <&kp ESCAPE>;
            key-positions = <20 19 40>;
        };

        home-arrow {
            bindings = <&kp HOME>;
            key-positions = <27 37>;
            layers = <1 2 3>;
        };

        end-arrow {
            bindings = <&kp END>;
            key-positions = <27 38>;
            layers = <1 2 3>;
        };

        end-right {
            bindings = <&kp END>;
            key-positions = <31 32 40>;
        };

        home-right {
            bindings = <&kp HOME>;
            key-positions = <39 31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                        &kp W                   &kp F                         &kp P                        &kp B                                    &kp J                       &kp L                       &kp U                           &kp Y                   &kp SEMI                &none
&none  &hold_tap_kp_kp RIGHT_ALT A  &hold_tap_kp_kp RGUI R  &hold_tap_kp_kp RCTRL S       &hold_tap_mo_kp 9 T          &kp G                                    &kp M                       &hold_tap_mo_kp 12 N        &hold_tap_kp_kp RCTRL E         &hold_tap_kp_kp RGUI I  &hold_tap_kp_kp RALT O  &none
&none  &kp Z                        &kp X                   &kp C                         &hold_tap_mo_kp 3 D          &kp V                                    &kp K                       &hold_tap_mo_kp 6 H         &kp COMMA                       &kp DOT                 &kp APOS                &none
                                                            &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_1  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_2 {
            bindings = <
&none  &kp C_BRIGHTNESS_INC   &kp C_VOLUME_UP    &kp PG_UP                     &kp C_NEXT                   &hold_tap_kp_sk GLOBE GLOBE      &undo_undo_mod          &copy_yank_mod              &kp UP_ARROW                    &paste_put_mod   &redo_redo_mod  &none
&none  &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN  &kp PG_UP                     &kp C_PREVIOUS               &none                            &cut_delete_mod         &kp LEFT_ARROW              &kp DOWN_ARROW                  &kp RIGHT_ARROW  &kp INSERT      &none
&none  &kp C_BRIGHTNESS_AUTO  &kp K_MUTE         &kp C_PLAY_PAUSE              &none                        &none                            &kp SCROLLLOCK          &kp PAUSE_BREAK             &kp CAPSLOCK                    &kp PRINTSCREEN  &none           &none
                                                 &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LSHIFT LSHIFT    &hold_tap_kp_kr LGUI 0  &backspace_del_mod_layer_2  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_2_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_2_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&none  &kp F13  &kp F7  &kp F8                        &kp F9                       &kp F10                                  &none                       &none                       &kp F22                         &kp F23  &kp F24  &none
&none  &kp F14  &kp F4  &kp F5                        &kp F6                       &kp F11                                  &none                       &none                       &kp F19                         &kp F20  &kp F21  &none
&none  &kp F15  &kp F1  &kp F2                        &kp F3                       &kp F12                                  &none                       &none                       &kp F16                         &kp F17  &kp F18  &none
                        &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_3  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_3_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&none  &kp GRAVE    &kp QUESTION     &kp AMPERSAND                 &none                        &none                                    &kp LEFT_BRACKET            &kp RIGHT_BRACKET           &kp ASTERISK                    &kp SLASH  &kp BACKSLASH  &none
&none  &kp AT_SIGN  &kp EXCLAMATION  &kp PIPE                      &none                        &none                                    &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS       &kp PLUS                        &kp MINUS  &kp EQUAL      &none
&none  &none        &kp HASH         &kp DOLLAR                    &none                        &none                                    &kp LESS_THAN               &kp GREATER_THAN            &kp PERCENT                     &kp CARET  &none          &none
                                     &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_4  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_4_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&none  &none   &kp N7  &kp N8                        &kp N9                       &kp AMPERSAND                            &kp LEFT_BRACKET            &kp RIGHT_BRACKET           &kp ASTERISK                    &kp SLASH  &kp BACKSLASH  &none
&none  &kp N0  &kp N4  &kp N5                        &kp N6                       &kp PIPE                                 &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS       &kp PLUS                        &kp MINUS  &kp EQUAL      &none
&none  &none   &kp N1  &kp N2                        &kp N3                       &kp EXCLAMATION                          &kp LESS_THAN               &kp GREATER_THAN            &kp PERCENT                     &kp CARET  &none          &none
                       &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_5  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_5_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&none  &ext_power EP_OFF  &ext_power EP_ON  &out OUT_USB                  &out OUT_BLE                 &bt BT_CLR                               &none                       &none                       &none                           &none  &none  &none
&none  &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2                  &bt BT_SEL 3                 &bt BT_SEL 4                             &none                       &tog 14                     &none                           &none  &none  &none
&none  &bootloader        &sys_reset        &none                         &bt BT_PRV                   &bt BT_NXT                               &none                       &none                       &none                           &none  &none  &none
                                            &hold_tap_kp_kp LEFT_ALT TAB  &hold_tap_kp_kp LCTRL SPACE  &hold_tap_kp_sk LEFT_SHIFT LEFT_SHIFT    &hold_tap_kp_kr LEFT_GUI 0  &backspace_del_mod_layer_6  &hold_tap_kp_kp LEFT_ALT ENTER
            >;
        };

        layer_6_lock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6_temp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_2_lock {
            if-layers = <2>;
            then-layer = <1>;
        };

        layer_2_temp {
            if-layers = <3>;
            then-layer = <1>;
        };

        layer_3_lock {
            if-layers = <5>;
            then-layer = <4>;
        };

        layer_3_temp {
            if-layers = <6>;
            then-layer = <4>;
        };

        layer_4_lock {
            if-layers = <8>;
            then-layer = <7>;
        };

        layer_4_temp {
            if-layers = <9>;
            then-layer = <7>;
        };

        layer_5_lock {
            if-layers = <11>;
            then-layer = <10>;
        };

        layer_5_temp {
            if-layers = <12>;
            then-layer = <10>;
        };

        layer_6_lock {
            if-layers = <14>;
            then-layer = <13>;
        };

        layer_6_temp {
            if-layers = <15>;
            then-layer = <13>;
        };
    };
};
